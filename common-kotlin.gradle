import org.jetbrains.kotlin.allopen.gradle.AllOpenGradleSubplugin
import org.jetbrains.kotlin.gradle.plugin.KotlinPluginWrapper
import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

import static org.jetbrains.kotlin.gradle.dsl.JvmTarget.JVM_11
import static org.jetbrains.kotlin.gradle.dsl.KotlinVersion.KOTLIN_1_8

buildscript {
    repositories {
        gradlePluginPortal()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-allopen:$kotlin_version"
    }
}

// See https://stackoverflow.com/a/34049142/3318571
apply plugin: KotlinPluginWrapper
apply plugin: AllOpenGradleSubplugin

allOpen {
    annotations(
            "javax.persistence.Entity",
            "javax.persistence.Embeddable",
            "javax.persistence.MappedSuperclass"
    )
}

tasks.withType(KotlinCompile).configureEach {
    compilerOptions {
        languageVersion = KOTLIN_1_8
        apiVersion = KOTLIN_1_8
        jvmTarget = JVM_11
        javaParameters = true   // Useful for reflection.
        freeCompilerArgs = ['-Xjvm-default=all-compatibility']
        allWarningsAsErrors = warnings_as_errors
    }
}
